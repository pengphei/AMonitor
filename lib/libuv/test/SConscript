# -*- coding: utf-8 -*-
# tests building script
#

import time
Import('genv')

env = Environment()
env["CC"] = genv["CC"]
env["CXX"] = genv["CXX"]
env["AS"] = genv["AS"]
env["AR"] = genv["AR"]
env["LINK"] = genv["LINK"]
env["OBJCOPY"] = genv["OBJCOPY"]
env["NM"] = genv["NM"]
env["ENV"] = genv["ENV"]

env["CFLAGS"] += [
    "-O3",
    "-g",
    "-Wno-unused-value",
    "-Wno-unused-parameter",
    "-D_GNU_SOURCE",
]

env["LIBPATH"] = [
    genv["out"],
]

env["CCFLAGS"] = [
    "-O3",
    "-g",
    "-Wno-unused-value",
    "-Wno-unused-parameter",
    "-D_GNU_SOURCE",
]

env["LINKFLAGS"] = [
]

dst = "run-tests"

inc = [
    ".",
    "../include",
]

src = [
    "blackhole-server.c",
    "dns-server.c",
    "echo-server.c",
    "run-tests.c",
    "runner.c",
    "test-active.c",
    "test-async.c",
    "test-async-null-cb.c",
    "test-barrier.c",
    "test-callback-order.c",
    "test-callback-stack.c",
    "test-close-fd.c",
    "test-close-order.c",
    "test-condvar.c",
    "test-connection-fail.c",
    "test-cwd-and-chdir.c",
    "test-default-loop-close.c",
    "test-delayed-accept.c",
    "test-dlerror.c",
    "test-eintr-handling.c",
    "test-embed.c",
    "test-emfile.c",
    "test-error.c",
    "test-fail-always.c",
    "test-fs-event.c",
    "test-fs-poll.c",
    "test-fs.c",
    "test-get-currentexe.c",
    "test-get-loadavg.c",
    "test-get-memory.c",
    "test-get-passwd.c",
    "test-getaddrinfo.c",
    "test-getnameinfo.c",
    "test-getsockname.c",
    "test-handle-fileno.c",
    "test-homedir.c",
    "test-hrtime.c",
    "test-idle.c",
    "test-ip4-addr.c",
    "test-ip6-addr.c",
    "test-ipc-send-recv.c",
    "test-ipc.c",
    "test-loop-handles.c",
    "test-loop-alive.c",
    "test-loop-close.c",
    "test-loop-stop.c",
    "test-loop-time.c",
    "test-loop-configure.c",
    "test-multiple-listen.c",
    "test-mutexes.c",
    "test-osx-select.c",
    "test-pass-always.c",
    "test-ping-pong.c",
    "test-pipe-bind-error.c",
    "test-pipe-connect-error.c",
    "test-pipe-connect-multiple.c",
    "test-pipe-connect-prepare.c",
    "test-pipe-getsockname.c",
    "test-pipe-pending-instances.c",
    "test-pipe-sendmsg.c",
    "test-pipe-server-close.c",
    "test-pipe-close-stdout-read-stdin.c",
    "test-pipe-set-non-blocking.c",
    "test-platform-output.c",
    "test-poll-close.c",
    "test-poll-close-doesnt-corrupt-stack.c",
    "test-poll-closesocket.c",
    "test-poll.c",
    "test-process-title.c",
    "test-queue-foreach-delete.c",
    "test-ref.c",
    "test-run-nowait.c",
    "test-run-once.c",
    "test-semaphore.c",
    "test-shutdown-close.c",
    "test-shutdown-eof.c",
    "test-shutdown-twice.c",
    "test-signal-multiple-loops.c",
    "test-signal.c",
    "test-socket-buffer-size.c",
    "test-spawn.c",
    "test-stdio-over-pipes.c",
    "test-tcp-bind-error.c",
    "test-tcp-bind6-error.c",
    "test-tcp-close-accept.c",
    "test-tcp-close-while-connecting.c",
    "test-tcp-close.c",
    "test-tcp-create-socket-early.c",
    "test-tcp-connect-error-after-write.c",
    "test-tcp-connect-error.c",
    "test-tcp-connect-timeout.c",
    "test-tcp-connect6-error.c",
    "test-tcp-flags.c",
    "test-tcp-open.c",
    "test-tcp-read-stop.c",
    "test-tcp-shutdown-after-write.c",
    "test-tcp-unexpected-read.c",
    "test-tcp-oob.c",
    "test-tcp-write-to-half-open-connection.c",
    "test-tcp-write-after-connect.c",
    "test-tcp-writealot.c",
    "test-tcp-write-fail.c",
    "test-tcp-try-write.c",
    "test-tcp-write-queue-order.c",
    "test-thread-equal.c",
    "test-thread.c",
    "test-threadpool-cancel.c",
    "test-threadpool.c",
    "test-timer-again.c",
    "test-timer-from-check.c",
    "test-timer.c",
    "test-tmpdir.c",
    "test-tty.c",
    "test-udp-bind.c",
    "test-udp-create-socket-early.c",
    "test-udp-dgram-too-big.c",
    "test-udp-ipv6.c",
    "test-udp-multicast-interface.c",
    "test-udp-multicast-interface6.c",
    "test-udp-multicast-join.c",
    "test-udp-multicast-join6.c",
    "test-udp-multicast-ttl.c",
    "test-udp-open.c",
    "test-udp-options.c",
    "test-udp-send-and-recv.c",
    "test-udp-send-immediate.c",
    "test-udp-send-unreachable.c",
    "test-udp-try-send.c",
    "test-walk-handles.c",
    "test-watcher-cross-stop.c",
    "runner-unix.c",
]

lib = [
    "uv",
    "pthread",
    "dl",
    "util",
]

test_prog = env.Program(target=dst, source=src, LIBS=lib, CPPPATH=inc)

Return("test_prog")
