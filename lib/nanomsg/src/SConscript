# -*- coding: utf-8 -*-
# nanomsg lib building script
#

import os

Import('genv')

env = Environment()
env["CC"] = genv["CC"]
env["CXX"] = genv["CXX"]
env["AS"] = genv["AS"]
env["AR"] = genv["AR"]
env["LINK"] = genv["LINK"]
env["OBJCOPY"] = genv["OBJCOPY"]
env["NM"] = genv["NM"]
env["ENV"] = genv["ENV"]
env["BUILD_PLATFORM"] = genv["BUILD_PLATFORM"]

env["CCFLAGS"] = [
    "-DNN_STATIC_LIB",
    "-DNN_HAVE_MSG_CONTROL",
    "-DNN_HAVE_ACCEPT4",
    "-DNN_HAVE_POLL",
]

env["CCFLAGS"] += [
    "-DNN_USE_EVENTFD",
#   "-DNN_USE_PIPE",
#   "-DNN_USE_SOCKETPAIR",
#   "-DNN_USE_WINSOCK",
]

env["CCFLAGS"] += [
    "-DNN_USE_EPOLL",
#   "-DNN_USE_KQUEUE",
#   "-DNN_USE_POLL"
]

env["CCFLAGS"] += [
#   "-DNN_HAVE_OSX",
#   "-DNN_HAVE_WINDOWS",
    "-DNN_HAVE_SEMAPHORE",
]

dst = "nanomsg"

inc = [
    ".",
    "core",
    "aio",
    "utils",
    "devices",
    "protocols/utils",
    "protocols/bus",
    "protocols/pipeline",
    "protocols/pair",
    "protocols/pubsub",
    "protocols/reqrep",
    "protocols/survey",

    "transports/utils",
    "transports/inproc",
    "transports/ipc",
    "transports/tcp",
    "transports/ws",
]

src = [
    # utils
    "utils/alloc.c",
    "utils/atomic.c",
    "utils/chunk.c",
    "utils/chunkref.c",
    "utils/clock.c",
    "utils/closefd.c",
    "utils/efd.c",
    "utils/err.c",
    "utils/hash.c",
    "utils/list.c",
    "utils/msg.c",
    "utils/condvar.c",
    "utils/mutex.c",
    "utils/once.c",
    "utils/queue.c",
    "utils/random.c",
    "utils/sem.c",
    "utils/sleep.c",
    "utils/thread.c",
    "utils/wire.c",

    # core
    "core/ep.c",
    "core/epbase.c",
    "core/global.c",
    "core/pipe.c",
    "core/poll.c",
    "core/sock.c",
    "core/sockbase.c",
    "core/symbol.c",
    # devices
    "devices/device.c",

    # aio
    "aio/ctx.c",
    "aio/fsm.c",
    "aio/pool.c",
    "aio/timer.c",
    "aio/timerset.c",
    "aio/usock.c",
    "aio/worker.c",
    "aio/poller.c",

    # protocols
    "protocols/utils/dist.c",
    "protocols/utils/excl.c",
    "protocols/utils/fq.c",
    "protocols/utils/lb.c",
    "protocols/utils/priolist.c",

    "protocols/bus/bus.c",
    "protocols/bus/xbus.c",
    "protocols/pipeline/push.c",
    "protocols/pipeline/pull.c",
    "protocols/pipeline/xpush.c",
    "protocols/pipeline/xpull.c",
    "protocols/pair/pair.c",
    "protocols/pair/xpair.c",
    "protocols/pubsub/pub.c",
    "protocols/pubsub/sub.c",
    "protocols/pubsub/trie.c",
    "protocols/pubsub/xpub.c",
    "protocols/pubsub/xsub.c",
    "protocols/reqrep/req.c",
    "protocols/reqrep/rep.c",
    "protocols/reqrep/xreq.c",
    "protocols/reqrep/xrep.c",
    "protocols/reqrep/task.c",
    "protocols/survey/respondent.c",
    "protocols/survey/xrespondent.c",
    "protocols/survey/surveyor.c",
    "protocols/survey/xsurveyor.c",

    "transports/utils/backoff.c",
    "transports/utils/dns.c",
    "transports/utils/iface.c",
    "transports/utils/literal.c",
    "transports/utils/port.c",
    "transports/utils/streamhdr.c",
    "transports/utils/base64.c",
    "transports/inproc/binproc.c",  
    "transports/inproc/cinproc.c", 
    "transports/inproc/inproc.c", 
    "transports/inproc/ins.c", 
    "transports/inproc/msgqueue.c", 
    "transports/inproc/sinproc.c", 
    "transports/ipc/aipc.c", 
    "transports/ipc/bipc.c",   
    "transports/ipc/cipc.c", 
    "transports/ipc/ipc.c", 
    "transports/ipc/sipc.c", 
    "transports/tcp/atcp.c", 
    "transports/tcp/btcp.c", 
    "transports/tcp/ctcp.c", 
    "transports/tcp/stcp.c", 
    "transports/tcp/tcp.c", 
    "transports/ws/aws.c", 
    "transports/ws/bws.c", 
    "transports/ws/cws.c", 
    "transports/ws/sws.c", 
    "transports/ws/ws.c", 
    "transports/ws/ws_handshake.c", 
    "transports/ws/sha1.c", 
]

lib = ["pthread"]

nanomsg_static = env.StaticLibrary(target=dst, source=src, LIBS=lib, CPPPATH=inc)
Return("nanomsg_static")
